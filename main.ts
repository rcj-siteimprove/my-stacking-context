import { Device } from "@siteimprove/alfa-device";
import { Element, Node } from "@siteimprove/alfa-dom";
import { Style } from "@siteimprove/alfa-style";

import { Native as DomNative } from "./node_modules/@siteimprove/alfa-dom/dist/native.js";
import { Native as DeviceNative } from "./node_modules/@siteimprove/alfa-device/dist/native.js";

import { StackingContext } from "./stacking-context.js";

const device = Device.from(DeviceNative.fromWindow(window));
const alfaDocument = Node.from(await DomNative.fromNode(window.document));

const positioned = Style.hasComputedStyle(
  "position",
  (style) => style.value !== "static",
  device,
);

// const zIndexed = Style.hasComputedStyle("z-index", (style) => style.value !== "auto", device);

// https://www.w3.org/TR/CSS22/visuren.html#layers
export function getStackingContext(): StackingContext {
  // The root element forms the root stacking context.
  // SPEC ASSUMPTION: The root element is the <html> element.
  const rootElement = alfaDocument
    .descendants()
    .find(Element.isElement)
    .getUnsafe();
  const root = new StackingContext(rootElement);

  function traverse(element: Element, context: StackingContext) {
    let currentContext = context;

    // Other stacking contexts are generated by any positioned
    // element (including relatively positioned elements) having
    // a computed value of `z-index` other than `auto`.
    // TODO: Check z-index once it's available; for now all positioned elements will form a stacking context
    if (positioned(element)) {
      const childContext = new StackingContext(element);
      currentContext.children.push(childContext);
      currentContext = childContext;
    }

    for (const child of element.children().filter(Element.isElement)) {
      traverse(child, currentContext);
    }
  }

  // TODO: Does it make sense to traverse <head> or should we jump straight to <body>?
  for (const element of rootElement.children().filter(Element.isElement)) {
    traverse(element, root);
  }

  return root;
}

console.log(getStackingContext());
