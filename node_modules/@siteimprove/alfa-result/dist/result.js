import { Err } from "./err.js";
import { Ok } from "./ok.js";
/**
 * @public
 */
export var Result;
(function (Result) {
    function isResult(value) {
        return isOk(value) || isErr(value);
    }
    Result.isResult = isResult;
    function isOk(value) {
        return Ok.isOk(value);
    }
    Result.isOk = isOk;
    function isErr(value) {
        return Err.isErr(value);
    }
    Result.isErr = isErr;
    function of(value) {
        return Ok.of(value);
    }
    Result.of = of;
    function from(thunk) {
        let value;
        try {
            value = thunk();
        }
        catch (error) {
            return Err.of(error);
        }
        if (value instanceof Promise) {
            return value
                .then((value) => Ok.of(value))
                .catch((error) => Err.of(error));
        }
        return Ok.of(value);
    }
    Result.from = from;
})(Result || (Result = {}));
//# sourceMappingURL=result.js.map