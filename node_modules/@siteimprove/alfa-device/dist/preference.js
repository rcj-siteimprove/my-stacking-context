/**
 * {@link https://drafts.csswg.org/mediaqueries-5/#mf-user-preferences}
 *
 * @public
 */
export class Preference {
    static of(name, value) {
        return new Preference(name, value);
    }
    _name;
    _value;
    constructor(name, value) {
        this._name = name;
        this._value = value;
    }
    get name() {
        return this._name;
    }
    get value() {
        return this._value;
    }
    equals(value) {
        return (value instanceof Preference &&
            value._name === this._name &&
            value._value === this._value);
    }
    hash(hash) {
        hash.writeString(this._name).writeString(this._value);
    }
    toJSON(options) {
        return {
            name: this._name,
            value: this._value,
        };
    }
}
/**
 * @public
 */
(function (Preference) {
    function isPreference(value, name) {
        return (value instanceof Preference && (name === undefined || value.name === name));
    }
    Preference.isPreference = isPreference;
    function from(json) {
        return Preference.of(json.name, json.value);
    }
    Preference.from = from;
    Preference.preferences = {
        /**
         * {@link https://drafts.csswg.org/mediaqueries-5/#forced-colors}
         */
        "forced-colors": ["none", "active"],
        /**
         * {@link https://drafts.csswg.org/mediaqueries-5/#inverted}
         */
        inverted: ["none", "inverted"],
        /**
         * {@link https://drafts.csswg.org/mediaqueries-5/#prefers-color-scheme}
         *
         * @remarks
         * For consistency, "no-preference" is also included.
         */
        "prefers-color-scheme": ["no-preference", "light", "dark"],
        /**
         * {@link https://drafts.csswg.org/mediaqueries-5/#prefers-contrast}
         *
         * @remarks
         * For consistency, "no-preference" is also included.
         */
        "prefers-contrast": ["no-preference", "less", "more", "custom"],
        /**
         * {@link https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-motion}
         */
        "prefers-reduced-motion": ["no-preference", "reduce"],
        /**
         * {@link https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-transparency}
         */
        "prefers-reduced-transparency": ["no-preference", "reduce"],
        /**
         * {@link https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-data}
         */
        "prefers-reduced-data": ["no-preference", "reduce"],
    };
    function unset(name) {
        function unset(name) {
            switch (name) {
                case "forced-colors":
                case "inverted":
                    return "none";
                case "prefers-color-scheme":
                case "prefers-contrast":
                case "prefers-reduced-motion":
                case "prefers-reduced-transparency":
                case "prefers-reduced-data":
                    return "no-preference";
            }
        }
        return unset(name);
    }
    Preference.unset = unset;
})(Preference || (Preference = {}));
//# sourceMappingURL=preference.js.map