/**
 * @public
 */
export class Display {
    static of(resolution, scan = Display.Scan.Progressive) {
        return new Display(resolution, scan);
    }
    _resolution;
    _scan;
    constructor(resolution, scan) {
        this._resolution = resolution;
        this._scan = scan;
    }
    /**
     * {@link https://www.w3.org/TR/mediaqueries/#resolution}
     */
    get resolution() {
        return this._resolution;
    }
    /**
     * {@link https://www.w3.org/TR/mediaqueries/#scan}
     */
    get scan() {
        return this._scan;
    }
    equals(value) {
        return (value instanceof Display &&
            value._resolution === this._resolution &&
            value._scan === this._scan);
    }
    hash(hash) {
        hash.writeUint8(this._resolution);
        switch (this._scan) {
            case Display.Scan.Interlace:
                hash.writeUint8(1);
                break;
            case Display.Scan.Progressive:
                hash.writeUint8(2);
        }
    }
    toJSON(options) {
        return {
            resolution: this._resolution,
            scan: this._scan,
        };
    }
}
/**
 * @public
 */
(function (Display) {
    let Scan;
    (function (Scan) {
        Scan["Interlace"] = "interlace";
        Scan["Progressive"] = "progressive";
    })(Scan = Display.Scan || (Display.Scan = {}));
    function from(json) {
        return Display.of(json.resolution, json.scan);
    }
    Display.from = from;
    function standard() {
        return Display.of(1, Scan.Progressive);
    }
    Display.standard = standard;
})(Display || (Display = {}));
//# sourceMappingURL=display.js.map