import { h } from "./h.js";
import { Rectangle } from "@siteimprove/alfa-rectangle";
const { entries } = Object;
/**
 * @public
 */
export function jsx(name, properties = null, ...children) {
    const attributes = {};
    const style = {};
    let box = undefined;
    let device = undefined;
    let externalId = undefined;
    let serializationId = undefined;
    for (const [name, value] of entries(properties ?? {})) {
        if (value === null || value === undefined) {
            continue;
        }
        switch (name) {
            case "style":
                for (const [propName, propValue] of entries(value)) {
                    style[propName] = propValue;
                }
                continue;
            case "box":
                const deviceAndBox = value;
                box = Rectangle.from(deviceAndBox);
                device = deviceAndBox.device;
                continue;
            case "externalId":
                if (typeof value === "string") {
                    externalId = value;
                }
                continue;
            case "serializationId":
                if (typeof value === "string") {
                    serializationId = value;
                }
                continue;
            default:
                attributes[name] = value === true ? value : `${value}`;
        }
    }
    return h(name, attributes, children.flat(Infinity), style, box, device, externalId, serializationId);
}
//# sourceMappingURL=jsx.js.map