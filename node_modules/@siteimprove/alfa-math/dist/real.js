const { abs, min, max } = Math;
/**
 * {@link https://en.wikipedia.org/wiki/Real_number}
 *
 * @public
 */
export var Real;
(function (Real) {
    function isReal(value) {
        return typeof value === "number" && Number.isFinite(value);
    }
    Real.isReal = isReal;
    function add(p, q) {
        return p + q;
    }
    Real.add = add;
    function subtract(p, q) {
        return p - q;
    }
    Real.subtract = subtract;
    function multiply(p, q) {
        return p * q;
    }
    Real.multiply = multiply;
    function divide(p, d) {
        return p / d;
    }
    Real.divide = divide;
    /**
     * Compute the modulus of a division of two reals.
     *
     * {@link https://en.wikipedia.org/wiki/Modulo_operation}
     *
     * @remarks
     * The modulo operation is different from the remainder operation supported
     * natively in JavaScript through the % operator.
     */
    function modulo(p, d) {
        return ((p % d) + d) % d;
    }
    Real.modulo = modulo;
    /**
     * Clamp a real between a lower and an upper value.
     */
    function clamp(p, l, u) {
        return max(l, min(p, u));
    }
    Real.clamp = clamp;
    /**
     * Round a real to a given number of decimals.
     */
    function round(p, n = 0) {
        return n === 0 ? Math.round(p) : Math.round(p * 10 ** n) / 10 ** n;
    }
    Real.round = round;
    /**
     * Check if two reals are equal, accounting for floating-point precision
     * errors according to a given epsilon.
     */
    function equals(a, b, e = Number.EPSILON) {
        if (a === b) {
            return true;
        }
        const diff = abs(a - b);
        if (a === 0 || b === 0) {
            return diff < e;
        }
        return diff / min(abs(b) + abs(a), Number.MAX_VALUE) < e;
    }
    Real.equals = equals;
})(Real || (Real = {}));
//# sourceMappingURL=real.js.map